-- Generated by CSharp.lua Compiler
local System = System
local SlipeLuaMtaDefinitions = SlipeLua.MtaDefinitions
local SystemNumerics = System.Numerics
System.namespace("SlipeLua.Shared.Helpers", function (namespace)
  --/ <summary>
  --/ Represents an easing function
  --/ </summary>
  namespace.class("EasingFunction", function (namespace)
    local getPeriod, setPeriod, getAmplitude, setAmplitude, getOvershoot, setOvershoot, getName, Interpolate, 
    InterpolateVector, InterpolateVector1, getLinear, getInQuad, getOutQuad, getInOutQuad, getOutInQuad, getInElastic, 
    getOutElastic, getInOutElastic, getOutInElastic, getInBack, getOutBack, getInOutBack, getOutInBack, getInBounce, 
    getOutBounce, getInOutBounce, getOutInBounce, getSineCurve, getCosineCurve, class, __ctor1__, __ctor2__
    __ctor1__ = function (this, name)
      this.Name = name
      this.Period = 0
      this.Amplitude = 0
      this.Overshoot = 0
    end
    __ctor2__ = function (this, function_, period, amplitude, overshoot)
      this.Name = getName(function_)
      this.Period = period
      this.Amplitude = amplitude
      this.Overshoot = overshoot
    end
    getPeriod, setPeriod = System.property("Period")
    getAmplitude, setAmplitude = System.property("Amplitude")
    getOvershoot, setOvershoot = System.property("Overshoot")
    getName = System.property("Name", true)
    Interpolate = function (this, progress)
      return SlipeLuaMtaDefinitions.MtaShared.GetEasingValue(progress, this.Name, this.Period, this.Amplitude, this.Overshoot)
    end
    InterpolateVector = function (this, start, end_, progress)
      local r = SlipeLuaMtaDefinitions.MtaShared.InterpolateBetween(start.X, start.Y, start.Z, end_.X, end_.Y, end_.Z, progress, this.Name, this.Period, this.Amplitude, this.Overshoot)
      return SystemNumerics.Vector3(r[1], r[2], r[3])
    end
    InterpolateVector1 = function (this, start, end_, progress)
      local r = InterpolateVector(this, SystemNumerics.Vector3(start, 0), SystemNumerics.Vector3(end_, 0), progress)
      return SystemNumerics.Vector2(r.X, r.Y)
    end
    getLinear = function ()
      return class("Linear")
    end
    getInQuad = function ()
      return class("InQuad")
    end
    getOutQuad = function ()
      return class("OutQuad")
    end
    getInOutQuad = function ()
      return class("InOutQuad")
    end
    getOutInQuad = function ()
      return class("OutInQuad")
    end
    getInElastic = function ()
      return class("InElastic")
    end
    getOutElastic = function ()
      return class("OutElastic")
    end
    getInOutElastic = function ()
      return class("InOutElastic")
    end
    getOutInElastic = function ()
      return class("OutInElastic")
    end
    getInBack = function ()
      return class("InBack")
    end
    getOutBack = function ()
      return class("OutBack")
    end
    getInOutBack = function ()
      return class("InOutBack")
    end
    getOutInBack = function ()
      return class("OutInBack")
    end
    getInBounce = function ()
      return class("InBounce")
    end
    getOutBounce = function ()
      return class("OutBounce")
    end
    getInOutBounce = function ()
      return class("InOutBounce")
    end
    getOutInBounce = function ()
      return class("OutInBounce")
    end
    getSineCurve = function ()
      return class("SineCurve")
    end
    getCosineCurve = function ()
      return class("CosineCurve")
    end
    class = {
      Period = 0,
      getPeriod = getPeriod,
      setPeriod = setPeriod,
      Amplitude = 0,
      getAmplitude = getAmplitude,
      setAmplitude = setAmplitude,
      Overshoot = 0,
      getOvershoot = getOvershoot,
      setOvershoot = setOvershoot,
      getName = getName,
      Interpolate = Interpolate,
      InterpolateVector = InterpolateVector,
      InterpolateVector1 = InterpolateVector1,
      getLinear = getLinear,
      getInQuad = getInQuad,
      getOutQuad = getOutQuad,
      getInOutQuad = getInOutQuad,
      getOutInQuad = getOutInQuad,
      getInElastic = getInElastic,
      getOutElastic = getOutElastic,
      getInOutElastic = getInOutElastic,
      getOutInElastic = getOutInElastic,
      getInBack = getInBack,
      getOutBack = getOutBack,
      getInOutBack = getInOutBack,
      getOutInBack = getOutInBack,
      getInBounce = getInBounce,
      getOutBounce = getOutBounce,
      getInOutBounce = getInOutBounce,
      getOutInBounce = getOutInBounce,
      getSineCurve = getSineCurve,
      getCosineCurve = getCosineCurve,
      __ctor__ = {
        __ctor1__,
        __ctor2__
      },
      __metadata__ = function (out)
        return {
          properties = {
            { "Amplitude", 0x106, System.Single, getAmplitude, setAmplitude },
            { "CosineCurve", 0x20E, class, getCosineCurve },
            { "InBack", 0x20E, class, getInBack },
            { "InBounce", 0x20E, class, getInBounce },
            { "InElastic", 0x20E, class, getInElastic },
            { "InOutBack", 0x20E, class, getInOutBack },
            { "InOutBounce", 0x20E, class, getInOutBounce },
            { "InOutElastic", 0x20E, class, getInOutElastic },
            { "InOutQuad", 0x20E, class, getInOutQuad },
            { "InQuad", 0x20E, class, getInQuad },
            { "Linear", 0x20E, class, getLinear },
            { "Name", 0x206, System.String, getName },
            { "OutBack", 0x20E, class, getOutBack },
            { "OutBounce", 0x20E, class, getOutBounce },
            { "OutElastic", 0x20E, class, getOutElastic },
            { "OutInBack", 0x20E, class, getOutInBack },
            { "OutInBounce", 0x20E, class, getOutInBounce },
            { "OutInElastic", 0x20E, class, getOutInElastic },
            { "OutInQuad", 0x20E, class, getOutInQuad },
            { "OutQuad", 0x20E, class, getOutQuad },
            { "Overshoot", 0x106, System.Single, getOvershoot, setOvershoot },
            { "Period", 0x106, System.Single, getPeriod, setPeriod },
            { "SineCurve", 0x20E, class, getSineCurve }
          },
          methods = {
            { ".ctor", 0x101, __ctor1__, System.String },
            { ".ctor", 0x406, __ctor2__, class, System.Single, System.Single, System.Single },
            { "Interpolate", 0x186, Interpolate, System.Single, System.Single },
            { "InterpolateVector", 0x386, InterpolateVector, System.Numerics.Vector3, System.Numerics.Vector3, System.Single, System.Numerics.Vector3 },
            { "InterpolateVector", 0x386, InterpolateVector1, System.Numerics.Vector2, System.Numerics.Vector2, System.Single, System.Numerics.Vector2 }
          },
          class = { 0x6 }
        }
      end
    }
    return class
  end)
end)
