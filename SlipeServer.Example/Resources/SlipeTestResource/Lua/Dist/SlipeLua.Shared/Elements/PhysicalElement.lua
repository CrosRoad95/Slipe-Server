-- Generated by CSharp.lua Compiler
local System = System
local SlipeLuaMtaDefinitions = SlipeLua.MtaDefinitions
local SystemNumerics = System.Numerics
local SlipeLuaCollisionShapes
local SlipeLuaSharedElements
local SlipeLuaSharedHelpers
System.import(function (out)
  SlipeLuaCollisionShapes = SlipeLua.Shared.CollisionShapes
  SlipeLuaSharedElements = SlipeLua.Shared.Elements
  SlipeLuaSharedHelpers = SlipeLua.Shared.Helpers
end)
System.namespace("SlipeLua.Shared.Elements", function (namespace)
  --/ <summary>
  --/ Represents a physical element in the GTA world
  --/ </summary>
  namespace.class("PhysicalElement", function (namespace)
    local getDimension, setDimension, getInterior, setInterior, getFrozen, setFrozen, getAlpha, setAlpha, 
    getHealth, setHealth, getModel, setModel, getCollisionShape, getCollisionsEnabled, setCollisionsEnabled, getLowLODElement, 
    setLowLODElement, getDoubleSided, setDoubleSided, getIsInWater, getIsLowLOD, getPosition, setPosition, getRotation, 
    setRotation, getQuaternionRotation, setQuaternionRotation, getMatrix, setMatrix, getForwardVector, getRightVector, getUpVector, 
    getVelocity, setVelocity, getAngularVelocity, setAngularVelocity, getAngularQuaternionVelocity, setAngularQuaternionVelocity, getToAttached, getIsAttached, 
    IsWithinCollisionShape, IsWithinMarker, AttachTo, AttachTo1, AttachTo2, AttachTo3, Detach, getOffset, 
    setOffset, GetWithinRange, FaceElement, addOnClicked, removeOnClicked, addOnModelChange, removeOnModelChange, addOnStartSync, 
    removeOnStartSync, addOnStopSync, removeOnStopSync, addOnStreamIn, removeOnStreamIn, addOnStreamOut, removeOnStreamOut, class, 
    __ctor__
    __ctor__ = function (this, mtaElement)
      SlipeLuaSharedElements.Element.__ctor__[2](this, mtaElement)
    end
    getDimension = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetElementDimension(this.element)
    end
    setDimension = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetElementDimension(this.element, value)
    end
    getInterior = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetElementInterior(this.element)
    end
    setInterior = function (this, value)
      local position = getPosition(this)
      SlipeLuaMtaDefinitions.MtaShared.SetElementInterior(this.element, value, position.X, position.Y, position.Z)
    end
    getFrozen = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.IsElementFrozen(this.element)
    end
    setFrozen = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetElementFrozen(this.element, value)
    end
    getAlpha = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetElementAlpha(this.element)
    end
    setAlpha = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetElementAlpha(this.element, value)
    end
    getHealth = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetElementHealth(this.element)
    end
    setHealth = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetElementHealth(this.element, value)
    end
    getModel = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetElementModel(this.element)
    end
    setModel = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetElementModel(this.element, value)
    end
    getCollisionShape = function (this)
      return SlipeLuaSharedElements.ElementManager.getInstance():GetElement(SlipeLuaMtaDefinitions.MtaShared.GetElementColShape(this.element), SlipeLuaCollisionShapes.CollisionShape)
    end
    getCollisionsEnabled = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetElementCollisionsEnabled(this.element)
    end
    setCollisionsEnabled = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetElementCollisionsEnabled(this.element, value)
    end
    getLowLODElement = function (this)
      return SlipeLuaSharedElements.ElementManager.getInstance():GetElement(SlipeLuaMtaDefinitions.MtaShared.GetLowLODElement(this.element), class)
    end
    setLowLODElement = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetLowLODElement(this.element, value:getMTAElement())
    end
    getDoubleSided = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.IsElementDoubleSided(this.element)
    end
    setDoubleSided = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetElementDoubleSided(this.element, value)
    end
    getIsInWater = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.IsElementInWater(this.element)
    end
    getIsLowLOD = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.IsElementLowLOD(this.element)
    end
    getPosition = function (this)
      local position = SlipeLuaMtaDefinitions.MtaShared.GetElementPosition(this.element)
      return SystemNumerics.Vector3(position[1], position[2], position[3])
    end
    setPosition = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetElementPosition(this.element, value.X, value.Y, value.Z, false)
    end
    getRotation = function (this)
      local rotation = SlipeLuaMtaDefinitions.MtaShared.GetElementRotation(this.element, "default")
      return SystemNumerics.Vector3(rotation[1], rotation[2], rotation[3])
    end
    setRotation = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetElementRotation(this.element, value.X, value.Y, value.Z, "default", true)
    end
    getQuaternionRotation = function (this)
      return SlipeLuaSharedHelpers.NumericHelper.EulerToQuaternion(getRotation(this))
    end
    setQuaternionRotation = function (this, value)
      setRotation(this, SlipeLuaSharedHelpers.NumericHelper.QuaternionToEuler(value:__clone__()))
    end
    getMatrix = function (this)
      local matrix = SlipeLuaMtaDefinitions.MtaShared.GetElementMatrix(this.element, false)
      return SystemNumerics.Matrix4x4(matrix[1][1], matrix[1][2], matrix[1][3], matrix[1][4], matrix[2][1], matrix[2][2], matrix[2][3], matrix[2][4], matrix[3][1], matrix[3][2], matrix[3][3], matrix[3][4], matrix[4][1], matrix[4][2], matrix[4][3], matrix[4][4])
    end
    setMatrix = function (this, value)
      setPosition(this, SystemNumerics.Vector3(value.M41, value.M42, value.M43))
      setQuaternionRotation(this, SystemNumerics.Quaternion.CreateFromRotationMatrix(value))
    end
    getForwardVector = function (this)
      local m = getMatrix(this)
      return SystemNumerics.Vector3(m.M21, m.M22, m.M23)
    end
    getRightVector = function (this)
      local m = getMatrix(this)
      return SystemNumerics.Vector3(m.M11, m.M12, m.M13)
    end
    getUpVector = function (this)
      local m = getMatrix(this)
      return SystemNumerics.Vector3(m.M31, m.M32, m.M33)
    end
    getVelocity = function (this)
      local velocity = SlipeLuaMtaDefinitions.MtaShared.GetElementVelocity(this.element)
      return SystemNumerics.Vector3(velocity[1], velocity[2], velocity[3])
    end
    setVelocity = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetElementVelocity(this.element, value.X, value.Y, value.Z)
    end
    getAngularVelocity = function (this)
      local velocity = SlipeLuaMtaDefinitions.MtaShared.GetElementAngularVelocity(this.element)
      return SystemNumerics.Vector3(velocity[1], velocity[2], velocity[3])
    end
    setAngularVelocity = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetElementAngularVelocity(this.element, value.X, value.Y, value.Z)
    end
    getAngularQuaternionVelocity = function (this)
      return SlipeLuaSharedHelpers.NumericHelper.EulerToQuaternion(getAngularVelocity(this))
    end
    setAngularQuaternionVelocity = function (this, value)
      setAngularVelocity(this, SlipeLuaSharedHelpers.NumericHelper.QuaternionToEuler(value:__clone__()))
    end
    getToAttached = function (this)
      return SlipeLuaSharedElements.ElementManager.getInstance():GetElement(SlipeLuaMtaDefinitions.MtaShared.GetElementAttachedTo(this.element), class)
    end
    getIsAttached = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.IsElementAttached(this.element)
    end
    IsWithinCollisionShape = function (this, collisionShape)
      return SlipeLuaMtaDefinitions.MtaShared.IsElementWithinColShape(this.element, collisionShape:getMTAElement())
    end
    IsWithinMarker = function (this, marker)
      return SlipeLuaMtaDefinitions.MtaShared.IsElementWithinMarker(this.element, marker:getMTAElement())
    end
    AttachTo = function (this, toElement, offsetMatrix)
      AttachTo2(this, toElement, offsetMatrix:getTranslation(), SystemNumerics.Quaternion.CreateFromRotationMatrix(offsetMatrix))
    end
    AttachTo1 = function (this, toElement, positionOffset, rotationOffset)
      SlipeLuaMtaDefinitions.MtaShared.AttachElements(this.element, toElement:getMTAElement(), positionOffset.X, positionOffset.Y, positionOffset.Z, rotationOffset.X, rotationOffset.Y, rotationOffset.Z)
    end
    AttachTo2 = function (this, toElement, positionOffset, rotationOffset)
      AttachTo1(this, toElement, positionOffset:__clone__(), SlipeLuaSharedHelpers.NumericHelper.QuaternionToEuler(rotationOffset:__clone__()))
    end
    AttachTo3 = function (this, toElement)
      AttachTo1(this, toElement, SystemNumerics.Vector3.getZero(), SystemNumerics.Vector3.getZero())
    end
    Detach = function (this)
      SlipeLuaMtaDefinitions.MtaShared.DetachElements(this.element, nil)
    end
    getOffset = function (this)
      local offsets = SlipeLuaMtaDefinitions.MtaShared.GetElementAttachedOffsets(this.element)
      local m = SystemNumerics.Matrix4x4.CreateFromQuaternion(SlipeLuaSharedHelpers.NumericHelper.EulerToQuaternion(SystemNumerics.Vector3(offsets[4], offsets[5], offsets[6])))
      m:setTranslation(SystemNumerics.Vector3(offsets[1], offsets[2], offsets[3]))
      return m:__clone__()
    end
    setOffset = function (this, value)
      local translationOffset = value:getTranslation()
      local rotationOffset = SlipeLuaSharedHelpers.NumericHelper.QuaternionToEuler(SystemNumerics.Quaternion.CreateFromRotationMatrix(value))
      SlipeLuaMtaDefinitions.MtaShared.SetElementAttachedOffsets(this.element, translationOffset.X, translationOffset.Y, translationOffset.Z, rotationOffset.X, rotationOffset.Y, rotationOffset.Z)
    end
    GetWithinRange = function (position, range, type)
      local mtaElements = SlipeLuaMtaDefinitions.MtaShared.GetArrayFromTable(SlipeLuaMtaDefinitions.MtaShared.GetElementsWithinRange(position.X, position.Y, position.Z, range, type), "MTAElement", T)
      return SlipeLuaSharedElements.ElementManager.getInstance():CastArray(mtaElements, class)
    end
    FaceElement = function (this, target)
      setRotation(this, SlipeLuaSharedHelpers.NumericHelper.RotationBetweenPositions(getPosition(this), getPosition(target)))
    end
    addOnClicked, removeOnClicked = System.event("OnClicked")
    addOnModelChange, removeOnModelChange = System.event("OnModelChange")
    addOnStartSync, removeOnStartSync = System.event("OnStartSync")
    addOnStopSync, removeOnStopSync = System.event("OnStopSync")
    addOnStreamIn, removeOnStreamIn = System.event("OnStreamIn")
    addOnStreamOut, removeOnStreamOut = System.event("OnStreamOut")
    class = {
      base = function (out)
        return {
          out.SlipeLua.Shared.Elements.Element
        }
      end,
      getDimension = getDimension,
      setDimension = setDimension,
      getInterior = getInterior,
      setInterior = setInterior,
      getFrozen = getFrozen,
      setFrozen = setFrozen,
      getAlpha = getAlpha,
      setAlpha = setAlpha,
      getHealth = getHealth,
      setHealth = setHealth,
      getModel = getModel,
      setModel = setModel,
      getCollisionShape = getCollisionShape,
      getCollisionsEnabled = getCollisionsEnabled,
      setCollisionsEnabled = setCollisionsEnabled,
      getLowLODElement = getLowLODElement,
      setLowLODElement = setLowLODElement,
      getDoubleSided = getDoubleSided,
      setDoubleSided = setDoubleSided,
      getIsInWater = getIsInWater,
      getIsLowLOD = getIsLowLOD,
      getPosition = getPosition,
      setPosition = setPosition,
      getRotation = getRotation,
      setRotation = setRotation,
      getQuaternionRotation = getQuaternionRotation,
      setQuaternionRotation = setQuaternionRotation,
      getMatrix = getMatrix,
      setMatrix = setMatrix,
      getForwardVector = getForwardVector,
      getRightVector = getRightVector,
      getUpVector = getUpVector,
      getVelocity = getVelocity,
      setVelocity = setVelocity,
      getAngularVelocity = getAngularVelocity,
      setAngularVelocity = setAngularVelocity,
      getAngularQuaternionVelocity = getAngularQuaternionVelocity,
      setAngularQuaternionVelocity = setAngularQuaternionVelocity,
      getToAttached = getToAttached,
      getIsAttached = getIsAttached,
      IsWithinCollisionShape = IsWithinCollisionShape,
      IsWithinMarker = IsWithinMarker,
      AttachTo = AttachTo,
      AttachTo1 = AttachTo1,
      AttachTo2 = AttachTo2,
      AttachTo3 = AttachTo3,
      Detach = Detach,
      getOffset = getOffset,
      setOffset = setOffset,
      GetWithinRange = GetWithinRange,
      FaceElement = FaceElement,
      addOnClicked = addOnClicked,
      removeOnClicked = removeOnClicked,
      addOnModelChange = addOnModelChange,
      removeOnModelChange = removeOnModelChange,
      addOnStartSync = addOnStartSync,
      removeOnStartSync = removeOnStartSync,
      addOnStopSync = addOnStopSync,
      removeOnStopSync = removeOnStopSync,
      addOnStreamIn = addOnStreamIn,
      removeOnStreamIn = removeOnStreamIn,
      addOnStreamOut = addOnStreamOut,
      removeOnStreamOut = removeOnStreamOut,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          properties = {
            { "Alpha", 0x106, System.Int32, getAlpha, setAlpha },
            { "AngularQuaternionVelocity", 0x106, System.Numerics.Quaternion, getAngularQuaternionVelocity, setAngularQuaternionVelocity },
            { "AngularVelocity", 0x106, System.Numerics.Vector3, getAngularVelocity, setAngularVelocity },
            { "CollisionShape", 0x206, out.SlipeLua.Shared.CollisionShapes.CollisionShape, getCollisionShape },
            { "CollisionsEnabled", 0x106, System.Boolean, getCollisionsEnabled, setCollisionsEnabled },
            { "Dimension", 0x106, System.Int32, getDimension, setDimension },
            { "DoubleSided", 0x106, System.Boolean, getDoubleSided, setDoubleSided },
            { "ForwardVector", 0x206, System.Numerics.Vector3, getForwardVector },
            { "Frozen", 0x106, System.Boolean, getFrozen, setFrozen },
            { "Health", 0x106, System.Single, getHealth, setHealth },
            { "Interior", 0x106, System.Int32, getInterior, setInterior },
            { "IsAttached", 0x206, System.Boolean, getIsAttached },
            { "IsInWater", 0x206, System.Boolean, getIsInWater },
            { "IsLowLOD", 0x206, System.Boolean, getIsLowLOD },
            { "LowLODElement", 0x106, class, getLowLODElement, setLowLODElement },
            { "Matrix", 0x106, System.Numerics.Matrix4x4, getMatrix, setMatrix },
            { "Model", 0x106, System.Int32, getModel, setModel },
            { "Offset", 0x106, System.Numerics.Matrix4x4, getOffset, setOffset },
            { "Position", 0x106, System.Numerics.Vector3, getPosition, setPosition },
            { "QuaternionRotation", 0x106, System.Numerics.Quaternion, getQuaternionRotation, setQuaternionRotation },
            { "RightVector", 0x206, System.Numerics.Vector3, getRightVector },
            { "Rotation", 0x106, System.Numerics.Vector3, getRotation, setRotation },
            { "ToAttached", 0x206, class, getToAttached },
            { "UpVector", 0x206, System.Numerics.Vector3, getUpVector },
            { "Velocity", 0x106, System.Numerics.Vector3, getVelocity, setVelocity }
          },
          methods = {
            { ".ctor", 0x106, nil, out.SlipeLua.MtaDefinitions.MtaElement },
            { "AttachTo", 0x206, AttachTo, class, System.Numerics.Matrix4x4 },
            { "AttachTo", 0x306, AttachTo1, class, System.Numerics.Vector3, System.Numerics.Vector3 },
            { "AttachTo", 0x306, AttachTo2, class, System.Numerics.Vector3, System.Numerics.Quaternion },
            { "AttachTo", 0x106, AttachTo3, class },
            { "Detach", 0x6, Detach },
            { "FaceElement", 0x106, FaceElement, class },
            { "GetWithinRange", 0x38E, GetWithinRange, System.Numerics.Vector3, System.Single, System.String, System.Array(out.SlipeLua.Shared.Elements.PhysicalElement) },
            { "IsWithinCollisionShape", 0x186, IsWithinCollisionShape, out.SlipeLua.Shared.CollisionShapes.CollisionShape, System.Boolean },
            { "IsWithinMarker", 0x186, IsWithinMarker, out.SlipeLua.Shared.Markers.SharedMarker, System.Boolean }
          },
          class = { 0x6 }
        }
      end
    }
    return class
  end)
end)
