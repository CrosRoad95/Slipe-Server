-- Generated by CSharp.lua Compiler
local System = System
local SlipeLuaMtaDefinitions = SlipeLua.MtaDefinitions
local SystemNumerics = System.Numerics
local SlipeLuaSharedGameWorld
local SlipeLuaSharedUtilities
System.import(function (out)
  SlipeLuaSharedGameWorld = SlipeLua.Shared.GameWorld
  SlipeLuaSharedUtilities = SlipeLua.Shared.Utilities
end)
System.namespace("SlipeLua.Shared.GameWorld", function (namespace)
  --/ <summary>
  --/ Shared singleton of the GTA world
  --/ </summary>
  namespace.class("SharedWorld", function (namespace)
    local getInstance, getLockedTrafficLights, setLockedTrafficLights, getAircraftMaxVelocity, setAircraftMaxVelocity, getAircraftMaxHeight, setAircraftMaxHeight, getCloudsEnabled, 
    setCloudsEnabled, getFarClipDistance, setFarClipDistance, getFogDistance, setFogDistance, getGameSpeed, setGameSpeed, getGravity, 
    setGravity, getHeatHaze, setHeatHaze, getJetpackMaxHeight, setJetpackMaxHeight, getMinuteDuration, setMinuteDuration, getMoonsize, 
    setMoonsize, getOcclusionsEnabled, setOcclusionsEnabled, getRainLevel, setRainLevel, getSkyGradient, setSkyGradient, getSunColor, 
    setSunColor, getSunSize, setSunSize, getTime, setTime, getTrafficLightState, setTrafficLightState, getWeather, 
    setWeather, getWindVelocity, setWindVelocity, setInteriorSounds, getWaterColor, setWaterColor, getWaveHeight, setWaveHeight, 
    ResetFarClipDistance, ResetFogDistance, ResetHeatHaze, GetGarage, ResetMoonSize, ResetRainLevel, ResetSkyGradient, ResetSunColor, 
    ResetSunSize, ResetWindVelocity, GetZoneName, RemoveWorldModel, RestoreWorldModel, RestoreAllWorldModels, ResetWaterColor, SetWaterLevel, 
    ResetWaterLevel, class, const
    getInstance = function ()
      if class.instance == nil then
        class.instance = class()
      end
      return class.instance
    end
    getLockedTrafficLights = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.AreTrafficLightsLocked()
    end
    setLockedTrafficLights = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetTrafficLightsLocked(value)
    end
    getAircraftMaxVelocity = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetAircraftMaxVelocity()
    end
    setAircraftMaxVelocity = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetAircraftMaxVelocity(value)
    end
    getAircraftMaxHeight = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetAircraftMaxHeight()
    end
    setAircraftMaxHeight = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetAircraftMaxHeight(value)
    end
    getCloudsEnabled = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetCloudsEnabled()
    end
    setCloudsEnabled = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetCloudsEnabled(value)
    end
    getFarClipDistance = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetFarClipDistance()
    end
    setFarClipDistance = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetFarClipDistance(value)
    end
    getFogDistance = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetFogDistance()
    end
    setFogDistance = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetFogDistance(value)
    end
    getGameSpeed = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetGameSpeed()
    end
    setGameSpeed = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetGameSpeed(value)
    end
    getGravity = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetGravity()
    end
    setGravity = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetGravity(value)
    end
    getHeatHaze = function (this)
      return SlipeLuaSharedGameWorld.HeatHaze.FromRaw(SlipeLuaMtaDefinitions.MtaShared.GetHeatHaze())
    end
    setHeatHaze = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetHeatHaze(value:getIntensity(), value:getRandomShift(), value:getSpeedMin(), value:getSpeedMax(), System.ToInt32(value:getScanSize().X), System.ToInt32(value:getScanSize().Y), System.ToInt32(value:getRenderSize().X), System.ToInt32(value:getRenderSize().Y), value:getShowInside())
    end
    getJetpackMaxHeight = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetJetpackMaxHeight()
    end
    setJetpackMaxHeight = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetJetpackMaxHeight(value)
    end
    getMinuteDuration = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetMinuteDuration()
    end
    setMinuteDuration = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetMinuteDuration(value)
    end
    getMoonsize = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetMoonSize()
    end
    setMoonsize = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetMoonSize(value)
    end
    getOcclusionsEnabled = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetOcclusionsEnabled()
    end
    setOcclusionsEnabled = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetOcclusionsEnabled(value)
    end
    getRainLevel = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetRainLevel()
    end
    setRainLevel = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetRainLevel(value)
    end
    getSkyGradient = function (this)
      local raw = SlipeLuaMtaDefinitions.MtaShared.GetSkyGradient()
      return System.Tuple(System.new(SlipeLuaSharedUtilities.Color, 4, System.toByte(raw[1]), System.toByte(raw[2]), System.toByte(raw[3])), System.new(SlipeLuaSharedUtilities.Color, 4, System.toByte(raw[4]), System.toByte(raw[5]), System.toByte(raw[6])))
    end
    setSkyGradient = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetSkyGradient(value[1]:getR(), value[1]:getG(), value[1]:getB(), value[2]:getR(), value[2]:getG(), value[2]:getB())
    end
    getSunColor = function (this)
      local raw = SlipeLuaMtaDefinitions.MtaShared.GetSunColor()
      return System.Tuple(System.new(SlipeLuaSharedUtilities.Color, 4, System.toByte(raw[1]), System.toByte(raw[2]), System.toByte(raw[3])), System.new(SlipeLuaSharedUtilities.Color, 4, System.toByte(raw[4]), System.toByte(raw[5]), System.toByte(raw[6])))
    end
    setSunColor = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetSunColor(value[1]:getR(), value[1]:getG(), value[1]:getB(), value[2]:getR(), value[2]:getG(), value[2]:getB())
    end
    getSunSize = function (this)
      return System.ToInt32(SlipeLuaMtaDefinitions.MtaShared.GetSunSize())
    end
    setSunSize = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetSunSize(value)
    end
    getTime = function (this)
      local time = SlipeLuaMtaDefinitions.MtaShared.GetTime()
      return SlipeLuaSharedGameWorld.GameTime(time[1], time[2])
    end
    setTime = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetTime(value:getHour(), value:getMinute())
    end
    getTrafficLightState = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetTrafficLightState()
    end
    setTrafficLightState = function (this, value)
      if value == 10 --[[TrafficLightState.Auto]] then
        SlipeLuaMtaDefinitions.MtaShared.SetTrafficLightState("auto")
      else
        SlipeLuaMtaDefinitions.MtaShared.SetTrafficLightState(value)
      end
    end
    getWeather = function (this)
      local result = SlipeLuaMtaDefinitions.MtaShared.GetWeather()
      return SlipeLuaSharedGameWorld.Weather(result[1], result[2])
    end
    setWeather = function (this, value)
      if value:getTransitionTo() > 0 then
        SlipeLuaMtaDefinitions.MtaShared.SetWeatherBlended(value:getTransitionTo())
      else
        SlipeLuaMtaDefinitions.MtaShared.SetWeather(value:getCurrent())
      end
    end
    getWindVelocity = function (this)
      local result = SlipeLuaMtaDefinitions.MtaShared.GetWindVelocity()
      return SystemNumerics.Vector3(result[1], result[2], result[3])
    end
    setWindVelocity = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetWindVelocity(value.X, value.Y, value.Z)
    end
    setInteriorSounds = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetInteriorSoundsEnabled(value)
    end
    getWaterColor = function (this)
      local result = SlipeLuaMtaDefinitions.MtaShared.GetWaterColor()
      return System.new(SlipeLuaSharedUtilities.Color, 3, System.toByte(result[1]), System.toByte(result[2]), System.toByte(result[3]), System.toByte(result[4]))
    end
    setWaterColor = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetWaterColor(value:getR(), value:getG(), value:getB(), value:getA())
    end
    getWaveHeight = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetWaveHeight()
    end
    setWaveHeight = function (this, value)
      SlipeLuaMtaDefinitions.MtaShared.SetWaveHeight(value)
    end
    ResetFarClipDistance = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.ResetFarClipDistance()
    end
    ResetFogDistance = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.ResetFogDistance()
    end
    ResetHeatHaze = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.ResetHeatHaze()
    end
    GetGarage = function (this, garage)
      return SlipeLuaSharedGameWorld.SharedGarage(garage)
    end
    ResetMoonSize = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.ResetMoonSize()
    end
    ResetRainLevel = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.ResetRainLevel()
    end
    ResetSkyGradient = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.ResetSkyGradient()
    end
    ResetSunColor = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.ResetSunColor()
    end
    ResetSunSize = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.ResetSunSize()
    end
    ResetWindVelocity = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.ResetWindVelocity()
    end
    GetZoneName = function (this, position, citiesOnly)
      return SlipeLuaMtaDefinitions.MtaShared.GetZoneName(position.X, position.Y, position.Z, citiesOnly)
    end
    RemoveWorldModel = function (this, modelID, radius, position, interior)
      return SlipeLuaMtaDefinitions.MtaShared.RemoveWorldModel(modelID, radius, position.X, position.Y, position.Z, interior)
    end
    RestoreWorldModel = function (this, modelID, radius, position, interior)
      return SlipeLuaMtaDefinitions.MtaShared.RestoreWorldModel(modelID, radius, position.X, position.Y, position.Z, interior)
    end
    RestoreAllWorldModels = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.RestoreAllWorldModels()
    end
    ResetWaterColor = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.ResetWaterColor()
    end
    SetWaterLevel = function (this, level, includeWaterFeatures, includeWaterElements)
      return SlipeLuaMtaDefinitions.MtaShared.SetWaterLevel(level, includeWaterFeatures, includeWaterElements)
    end
    ResetWaterLevel = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.ResetWaterLevel()
    end
    --too many upvalues (limit is 60)
    const = {}
    const.setTrafficLightState = setTrafficLightState
    const.getWaterColor = getWaterColor
    const.setWaterColor = setWaterColor
    const.getWaveHeight = getWaveHeight
    const.setWaveHeight = setWaveHeight
    const.getWeather = getWeather
    const.setWeather = setWeather
    const.getWindVelocity = getWindVelocity
    const.setWindVelocity = setWindVelocity
    class = {
      getInstance = getInstance,
      getLockedTrafficLights = getLockedTrafficLights,
      setLockedTrafficLights = setLockedTrafficLights,
      getAircraftMaxVelocity = getAircraftMaxVelocity,
      setAircraftMaxVelocity = setAircraftMaxVelocity,
      getAircraftMaxHeight = getAircraftMaxHeight,
      setAircraftMaxHeight = setAircraftMaxHeight,
      getCloudsEnabled = getCloudsEnabled,
      setCloudsEnabled = setCloudsEnabled,
      getFarClipDistance = getFarClipDistance,
      setFarClipDistance = setFarClipDistance,
      getFogDistance = getFogDistance,
      setFogDistance = setFogDistance,
      getGameSpeed = getGameSpeed,
      setGameSpeed = setGameSpeed,
      getGravity = getGravity,
      setGravity = setGravity,
      getHeatHaze = getHeatHaze,
      setHeatHaze = setHeatHaze,
      getJetpackMaxHeight = getJetpackMaxHeight,
      setJetpackMaxHeight = setJetpackMaxHeight,
      getMinuteDuration = getMinuteDuration,
      setMinuteDuration = setMinuteDuration,
      getMoonsize = getMoonsize,
      setMoonsize = setMoonsize,
      getOcclusionsEnabled = getOcclusionsEnabled,
      setOcclusionsEnabled = setOcclusionsEnabled,
      getRainLevel = getRainLevel,
      setRainLevel = setRainLevel,
      getSkyGradient = getSkyGradient,
      setSkyGradient = setSkyGradient,
      getSunColor = getSunColor,
      setSunColor = setSunColor,
      getSunSize = getSunSize,
      setSunSize = setSunSize,
      getTime = getTime,
      setTime = setTime,
      getTrafficLightState = getTrafficLightState,
      setTrafficLightState = setTrafficLightState,
      getWeather = getWeather,
      setWeather = setWeather,
      getWindVelocity = getWindVelocity,
      setWindVelocity = setWindVelocity,
      setInteriorSounds = setInteriorSounds,
      getWaterColor = getWaterColor,
      setWaterColor = setWaterColor,
      getWaveHeight = getWaveHeight,
      setWaveHeight = setWaveHeight,
      ResetFarClipDistance = ResetFarClipDistance,
      ResetFogDistance = ResetFogDistance,
      ResetHeatHaze = ResetHeatHaze,
      GetGarage = GetGarage,
      ResetMoonSize = ResetMoonSize,
      ResetRainLevel = ResetRainLevel,
      ResetSkyGradient = ResetSkyGradient,
      ResetSunColor = ResetSunColor,
      ResetSunSize = ResetSunSize,
      ResetWindVelocity = ResetWindVelocity,
      GetZoneName = GetZoneName,
      RemoveWorldModel = RemoveWorldModel,
      RestoreWorldModel = RestoreWorldModel,
      RestoreAllWorldModels = RestoreAllWorldModels,
      ResetWaterColor = ResetWaterColor,
      SetWaterLevel = SetWaterLevel,
      ResetWaterLevel = ResetWaterLevel,
      __metadata__ = function (out)
        return {
          fields = {
            { "instance", 0xB, class }
          },
          properties = {
            { "AircraftMaxHeight", 0x106, System.Single, getAircraftMaxHeight, setAircraftMaxHeight },
            { "AircraftMaxVelocity", 0x106, System.Single, getAircraftMaxVelocity, setAircraftMaxVelocity },
            { "CloudsEnabled", 0x106, System.Boolean, getCloudsEnabled, setCloudsEnabled },
            { "FarClipDistance", 0x106, System.Single, getFarClipDistance, setFarClipDistance },
            { "FogDistance", 0x106, System.Single, getFogDistance, setFogDistance },
            { "GameSpeed", 0x106, System.Single, getGameSpeed, setGameSpeed },
            { "Gravity", 0x106, System.Single, getGravity, setGravity },
            { "HeatHaze", 0x106, out.SlipeLua.Shared.GameWorld.HeatHaze, getHeatHaze, setHeatHaze },
            { "Instance", 0x20E, class, getInstance },
            { "InteriorSounds", 0x306, System.Boolean, setInteriorSounds },
            { "JetpackMaxHeight", 0x106, System.Single, getJetpackMaxHeight, setJetpackMaxHeight },
            { "LockedTrafficLights", 0x106, System.Boolean, getLockedTrafficLights, setLockedTrafficLights },
            { "MinuteDuration", 0x106, System.Int32, getMinuteDuration, setMinuteDuration },
            { "Moonsize", 0x106, System.Int32, getMoonsize, setMoonsize },
            { "OcclusionsEnabled", 0x106, System.Boolean, getOcclusionsEnabled, setOcclusionsEnabled },
            { "RainLevel", 0x106, System.Single, getRainLevel, setRainLevel },
            { "SkyGradient", 0x106, System.Tuple, getSkyGradient, setSkyGradient },
            { "SunColor", 0x106, System.Tuple, getSunColor, setSunColor },
            { "SunSize", 0x106, System.Int32, getSunSize, setSunSize },
            { "Time", 0x106, out.SlipeLua.Shared.GameWorld.GameTime, getTime, setTime },
            { "TrafficLightState", 0x106, System.Int32, getTrafficLightState, const.setTrafficLightState },
            { "WaterColor", 0x106, out.SlipeLua.Shared.Utilities.Color, const.getWaterColor, const.setWaterColor },
            { "WaveHeight", 0x106, System.Single, const.getWaveHeight, const.setWaveHeight },
            { "Weather", 0x106, out.SlipeLua.Shared.GameWorld.Weather, const.getWeather, const.setWeather },
            { "WindVelocity", 0x106, System.Numerics.Vector3, const.getWindVelocity, const.setWindVelocity }
          },
          methods = {
            { ".ctor", 0x6, nil },
            { "GetGarage", 0x186, GetGarage, System.Int32, out.SlipeLua.Shared.GameWorld.SharedGarage },
            { "GetZoneName", 0x286, GetZoneName, System.Numerics.Vector3, System.Boolean, System.String },
            { "RemoveWorldModel", 0x486, RemoveWorldModel, System.Int32, System.Single, System.Numerics.Vector3, System.Int32, System.Boolean },
            { "ResetFarClipDistance", 0x86, ResetFarClipDistance, System.Boolean },
            { "ResetFogDistance", 0x86, ResetFogDistance, System.Boolean },
            { "ResetHeatHaze", 0x86, ResetHeatHaze, System.Boolean },
            { "ResetMoonSize", 0x86, ResetMoonSize, System.Boolean },
            { "ResetRainLevel", 0x86, ResetRainLevel, System.Boolean },
            { "ResetSkyGradient", 0x86, ResetSkyGradient, System.Boolean },
            { "ResetSunColor", 0x86, ResetSunColor, System.Boolean },
            { "ResetSunSize", 0x86, ResetSunSize, System.Boolean },
            { "ResetWaterColor", 0x86, ResetWaterColor, System.Boolean },
            { "ResetWaterLevel", 0x86, ResetWaterLevel, System.Boolean },
            { "ResetWindVelocity", 0x86, ResetWindVelocity, System.Boolean },
            { "RestoreAllWorldModels", 0x86, RestoreAllWorldModels, System.Boolean },
            { "RestoreWorldModel", 0x486, RestoreWorldModel, System.Int32, System.Single, System.Numerics.Vector3, System.Int32, System.Boolean },
            { "SetWaterLevel", 0x386, SetWaterLevel, System.Single, System.Boolean, System.Boolean, System.Boolean }
          },
          class = { 0x6 }
        }
      end
    }
    return class
  end)
end)
