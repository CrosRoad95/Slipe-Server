-- Generated by CSharp.lua Compiler
local System = System
local SlipeLuaMtaDefinitions = SlipeLua.MtaDefinitions
local SlipeLuaSharedElements
System.import(function (out)
  SlipeLuaSharedElements = SlipeLua.Shared.Elements
end)
System.namespace("SlipeLua.Shared.CollisionShapes", function (namespace)
  --/ <summary>
  --/ Base class for collision shapes
  --/ </summary>
  namespace.class("CollisionShape", function (namespace)
    local getShapeType, getElementsWithin, IsInside, IsElementWithin, GetElementsWithin, addOnHit, removeOnHit, addOnLeave, 
    removeOnLeave, __ctor__
    __ctor__ = function (this, element)
      SlipeLuaSharedElements.PhysicalElement.__ctor__(this, element)
    end
    getShapeType = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetColShapeType(this.element)
    end
    getElementsWithin = function (this)
      local array = SlipeLuaMtaDefinitions.MtaShared.GetArrayFromTable(SlipeLuaMtaDefinitions.MtaShared.GetElementsWithinColShape(this.element, nil), "MTAElement", T)
      return SlipeLuaSharedElements.ElementManager.getInstance():CastArray(array, SlipeLuaSharedElements.PhysicalElement)
    end
    IsInside = function (this, position)
      return SlipeLuaMtaDefinitions.MtaShared.IsInsideColShape(this.element, position.X, position.Y, position.Z)
    end
    IsElementWithin = function (this, element)
      return SlipeLuaMtaDefinitions.MtaShared.IsElementWithinColShape(this.element, element:getMTAElement())
    end
    GetElementsWithin = function (this, T)
      local array = SlipeLuaMtaDefinitions.MtaShared.GetArrayFromTable(SlipeLuaMtaDefinitions.MtaShared.GetElementsWithinColShape(this.element, SlipeLuaSharedElements.ElementManager.getInstance():GetTypeName(System.typeof(T))), "MTAElement", T)
      return SlipeLuaSharedElements.ElementManager.getInstance():CastArray(array, T)
    end
    addOnHit, removeOnHit = System.event("OnHit")
    addOnLeave, removeOnLeave = System.event("OnLeave")
    return {
      base = function (out)
        return {
          out.SlipeLua.Shared.Elements.PhysicalElement
        }
      end,
      getShapeType = getShapeType,
      getElementsWithin = getElementsWithin,
      IsInside = IsInside,
      IsElementWithin = IsElementWithin,
      GetElementsWithin = GetElementsWithin,
      addOnHit = addOnHit,
      removeOnHit = removeOnHit,
      addOnLeave = addOnLeave,
      removeOnLeave = removeOnLeave,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          properties = {
            { "ElementsWithin", 0x206, System.Array(out.SlipeLua.Shared.Elements.PhysicalElement), getElementsWithin },
            { "ShapeType", 0x206, System.String, getShapeType }
          },
          methods = {
            { ".ctor", 0x106, nil, out.SlipeLua.MtaDefinitions.MtaElement },
            { "GetElementsWithin", 0x10086, GetElementsWithin, function (T) return System.Array(T) end },
            { "IsElementWithin", 0x186, IsElementWithin, out.SlipeLua.Shared.Elements.PhysicalElement, System.Boolean },
            { "IsInside", 0x186, IsInside, System.Numerics.Vector3, System.Boolean }
          },
          class = { 0x6, System.new(out.SlipeLua.Shared.Elements.DefaultElementClassAttribute, 2, 7 --[[ElementType.ColShape]]) }
        }
      end
    }
  end)
end)
