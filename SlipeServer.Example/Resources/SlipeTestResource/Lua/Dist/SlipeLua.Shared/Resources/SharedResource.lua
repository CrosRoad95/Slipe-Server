-- Generated by CSharp.lua Compiler
local System = System
local SlipeLuaExports = SlipeLua.Exports
local SlipeLuaMtaDefinitions = SlipeLua.MtaDefinitions
local SystemXml = System.Xml
local SlipeLuaSharedElements
System.import(function (out)
  SlipeLuaSharedElements = SlipeLua.Shared.Elements
end)
System.namespace("SlipeLua.Shared.Resources", function (namespace)
  --/ <summary>
  --/ Represents an MTA resource
  --/ </summary>
  namespace.class("SharedResource", function (namespace)
    local getMtaResource, setMtaResource, getName, getDynamicRoot, getRoot, getState, getExportedFunctions, Config, 
    Invoke
    getMtaResource, setMtaResource = System.property("MtaResource")
    getName = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetResourceName(this.MtaResource)
    end
    getDynamicRoot = function (this)
      return SlipeLuaSharedElements.ElementManager.getInstance():GetElement1(SlipeLuaMtaDefinitions.MtaShared.GetResourceDynamicElementRoot(this.MtaResource))
    end
    getRoot = function (this)
      return SlipeLuaSharedElements.ElementManager.getInstance():GetElement1(SlipeLuaMtaDefinitions.MtaShared.GetResourceRootElement(this.MtaResource))
    end
    getState = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetResourceState(this.MtaResource)
    end
    getExportedFunctions = function (this)
      return SlipeLuaMtaDefinitions.MtaShared.GetArrayFromTable(SlipeLuaMtaDefinitions.MtaShared.GetResourceExportedFunctions(this.MtaResource), "System.String", T)
    end
    Config = function (this, filePath)
      local mtaNode = SlipeLuaMtaDefinitions.MtaShared.GetResourceConfig(filePath)

      local document = SystemXml.XmlDocument()
      local xmlNode = document:CreateElement(SlipeLuaMtaDefinitions.MtaShared.XmlNodeGetName(mtaNode))
      xmlNode:index(mtaNode)
      return xmlNode
    end
    Invoke = function (this, functionName, parameters)
      do
       local export = exports[this:getName()]
          return export[functionName](export, unpack(parameters))	
      end
      return SlipeLuaExports.Export.Invoke(getName(this), functionName, parameters)
    end
    return {
      getMtaResource = getMtaResource,
      setMtaResource = setMtaResource,
      getName = getName,
      getDynamicRoot = getDynamicRoot,
      getRoot = getRoot,
      getState = getState,
      getExportedFunctions = getExportedFunctions,
      Config = Config,
      Invoke = Invoke,
      __metadata__ = function (out)
        return {
          properties = {
            { "DynamicRoot", 0x206, out.SlipeLua.Shared.Elements.Element, getDynamicRoot },
            { "ExportedFunctions", 0x206, System.Array(System.String), getExportedFunctions },
            { "MtaResource", 0x103, out.SlipeLua.MtaDefinitions.MtaResource, getMtaResource, setMtaResource },
            { "Name", 0x206, System.String, getName },
            { "Root", 0x206, out.SlipeLua.Shared.Elements.Element, getRoot },
            { "State", 0x206, System.String, getState }
          },
          methods = {
            { "Config", 0x186, Config, System.String, System.Xml.XmlNode },
            { "Invoke", 0x286, Invoke, System.String, System.Array(System.Object), System.Object }
          },
          class = { 0x6 }
        }
      end
    }
  end)
end)
