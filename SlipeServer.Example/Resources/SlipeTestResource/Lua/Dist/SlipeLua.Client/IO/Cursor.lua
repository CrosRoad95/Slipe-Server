-- Generated by CSharp.lua Compiler
local System = System
local SlipeLuaMtaDefinitions = SlipeLua.MtaDefinitions
local SystemNumerics = System.Numerics
local SlipeLuaClientRendering
System.import(function (out)
  SlipeLuaClientRendering = SlipeLua.Client.Rendering
end)
System.namespace("SlipeLua.Client.IO", function (namespace)
  --/ <summary>
  --/ Class representing the cursor of the local player
  --/ </summary>
  namespace.class("Cursor", function (namespace)
    local getRelativePosition, getPosition, setPosition, getWorldPosition, getAlpha, setAlpha, getType, getVisible, 
    SetVisible, addOnClick, removeOnClick, addOnDoubleClick, removeOnDoubleClick, addOnMove, removeOnMove, class
    getRelativePosition = function ()
      local r = SlipeLuaMtaDefinitions.MtaClient.GetCursorPosition()
      return SystemNumerics.Vector2(r[1], r[2])
    end
    getPosition = function ()
      local r = SlipeLuaMtaDefinitions.MtaClient.GetCursorPosition()

      return SystemNumerics.Vector2(r[1] * SlipeLuaClientRendering.Renderer.getScreenSize().X, r[2] * SlipeLuaClientRendering.Renderer.getScreenSize().Y)
    end
    setPosition = function (value)
      SlipeLuaMtaDefinitions.MtaClient.SetCursorPosition(System.ToInt32(value.X), System.ToInt32(value.Y))
    end
    getWorldPosition = function ()
      local r = SlipeLuaMtaDefinitions.MtaClient.GetCursorPosition()
      return SystemNumerics.Vector3(r[3], r[4], r[5])
    end
    getAlpha = function ()
      return SlipeLuaMtaDefinitions.MtaClient.GetCursorAlpha()
    end
    setAlpha = function (value)
      SlipeLuaMtaDefinitions.MtaClient.SetCursorAlpha(value)
    end
    getType = function ()
      return SlipeLuaMtaDefinitions.MtaClient.GuiGetCursorType()
    end
    getVisible = function ()
      return SlipeLuaMtaDefinitions.MtaClient.IsCursorShowing()
    end
    SetVisible = function (visible, toggleControls)
      return SlipeLuaMtaDefinitions.MtaClient.ShowCursor(visible, toggleControls)
    end
    addOnClick = function (value)
      class.OnClick = class.OnClick + value
    end
    removeOnClick = function (value)
      class.OnClick = class.OnClick - value
    end
    addOnDoubleClick = function (value)
      class.OnDoubleClick = class.OnDoubleClick + value
    end
    removeOnDoubleClick = function (value)
      class.OnDoubleClick = class.OnDoubleClick - value
    end
    addOnMove = function (value)
      class.OnMove = class.OnMove + value
    end
    removeOnMove = function (value)
      class.OnMove = class.OnMove - value
    end
    class = {
      getRelativePosition = getRelativePosition,
      getPosition = getPosition,
      setPosition = setPosition,
      getWorldPosition = getWorldPosition,
      getAlpha = getAlpha,
      setAlpha = setAlpha,
      getType = getType,
      getVisible = getVisible,
      SetVisible = SetVisible,
      addOnClick = addOnClick,
      removeOnClick = removeOnClick,
      addOnDoubleClick = addOnDoubleClick,
      removeOnDoubleClick = removeOnDoubleClick,
      addOnMove = addOnMove,
      removeOnMove = removeOnMove,
      __metadata__ = function (out)
        return {
          properties = {
            { "Alpha", 0x10E, System.Int32, getAlpha, setAlpha },
            { "Position", 0x10E, System.Numerics.Vector2, getPosition, setPosition },
            { "RelativePosition", 0x20E, System.Numerics.Vector2, getRelativePosition },
            { "Type", 0x20E, System.String, getType },
            { "Visible", 0x20E, System.Boolean, getVisible },
            { "WorldPosition", 0x20E, System.Numerics.Vector3, getWorldPosition }
          },
          methods = {
            { "SetVisible", 0x28E, SetVisible, System.Boolean, System.Boolean, System.Boolean }
          },
          class = { 0xE }
        }
      end
    }
    return class
  end)
end)
