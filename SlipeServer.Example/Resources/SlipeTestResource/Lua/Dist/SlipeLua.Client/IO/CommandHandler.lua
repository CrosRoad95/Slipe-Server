-- Generated by CSharp.lua Compiler
local System = System
local SlipeLuaMtaDefinitions = SlipeLua.MtaDefinitions
System.namespace("SlipeLua.Client.IO", function (namespace)
  --/ <summary>
  --/ Represents a single command handler
  --/ </summary>
  namespace.class("CommandHandler", function (namespace)
    local CommandHandlerCallback, Execute, Execute1, __ctor__
    __ctor__ = function (this, command, callback, restricted, caseSensitive)
      this.command = command
      this.callback = callback
      SlipeLuaMtaDefinitions.MtaClient.AddCommandHandler(command, System.fn(this, CommandHandlerCallback), caseSensitive)
    end
    CommandHandlerCallback = function (this, command, parameters)
      local default = this.callback
      if default ~= nil then
        default(command, parameters)
      end
    end
    Execute = function (this, args)
      SlipeLuaMtaDefinitions.MtaClient.ExecuteCommandHandler(this.command, System.String.JoinParams(" ", args))
    end
    Execute1 = function (command, args)
      SlipeLuaMtaDefinitions.MtaClient.ExecuteCommandHandler(command, System.String.JoinParams(" ", args))
    end
    return {
      Execute = Execute,
      Execute1 = Execute1,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "callback", 0x1, System.Delegate(System.String, System.Array(System.String), System.Void) },
            { "command", 0x1, System.String }
          },
          methods = {
            { ".ctor", 0x406, nil, System.String, System.Delegate(System.String, System.Array(System.String), System.Void), System.Boolean, System.Boolean },
            { "CommandHandlerCallback", 0x201, CommandHandlerCallback, System.String, System.Array(System.String) },
            { "Execute", 0x106, Execute, System.Array(System.String) },
            { "Execute", 0x20E, Execute1, System.String, System.Array(System.String) }
          },
          class = { 0x6 }
        }
      end
    }
  end)
end)
