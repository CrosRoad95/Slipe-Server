-- Generated by CSharp.lua Compiler
local System = System
local SlipeLuaMtaDefinitions = SlipeLua.MtaDefinitions
local SlipeLuaSharedUtilities = SlipeLua.Shared.Utilities
local SystemNumerics = System.Numerics
local SlipeLuaClientDx
System.import(function (out)
  SlipeLuaClientDx = SlipeLua.Client.Dx
end)
System.namespace("SlipeLua.Client.Dx", function (namespace)
  --/ <summary>
  --/ Represents a data format of pixels of a texture element
  --/ </summary>
  namespace.class("TexturePixels", function (namespace)
    local Convert, GetPixelColor, SetPixelColor, getSize, getFormat, __ctor__
    __ctor__ = function (this, pixelString)
      this.pixels = pixelString
      -- MTAClient.DxConvertPixels(pixelString, "plain", 80);
    end
    Convert = function (this, format, quality)
      return SlipeLuaMtaDefinitions.MtaClient.DxConvertPixels(this.pixels, format:EnumToString(SlipeLuaClientDx.ImageFormat), quality)
    end
    GetPixelColor = function (this, coordinate)
      local p = this.pixels
      if getFormat(this) ~= 0 --[[ImageFormat.plain]] then
        p = Convert(this, 0 --[[ImageFormat.plain]], 80)
      end

      local result = SlipeLuaMtaDefinitions.MtaClient.DxGetPixelColor(p, System.ToInt32(coordinate.X), System.ToInt32(coordinate.Y))
      return System.new(SlipeLuaSharedUtilities.Color, 3, System.toByte(result[1]), System.toByte(result[2]), System.toByte(result[3]), System.toByte(result[4]))
    end
    SetPixelColor = function (this, coordinate, color)
      if getFormat(this) ~= 0 --[[ImageFormat.plain]] then
        this.pixels = Convert(this, 0 --[[ImageFormat.plain]], 80)
      end

      return SlipeLuaMtaDefinitions.MtaClient.DxSetPixelColor(this.pixels, System.ToInt32(coordinate.X), System.ToInt32(coordinate.Y), color:getR(), color:getG(), color:getB(), color:getA())
    end
    getSize = function (this)
      local result = SlipeLuaMtaDefinitions.MtaClient.DxGetPixelsSize(this.pixels)
      return SystemNumerics.Vector2(result[1], result[2])
    end
    getFormat = function (this)
      return System.cast(System.Int32, System.Enum.Parse(System.typeof(SlipeLuaClientDx.ImageFormat), SlipeLuaMtaDefinitions.MtaClient.DxGetPixelsFormat(this.pixels)))
    end
    return {
      Convert = Convert,
      GetPixelColor = GetPixelColor,
      SetPixelColor = SetPixelColor,
      getSize = getSize,
      getFormat = getFormat,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "pixels", 0x1, System.String }
          },
          methods = {
            { ".ctor", 0x106, nil, System.String },
            { "Convert", 0x286, Convert, System.Int32, System.Int32, System.String },
            { "GetPixelColor", 0x186, GetPixelColor, System.Numerics.Vector2, out.SlipeLua.Shared.Utilities.Color },
            { "SetPixelColor", 0x286, SetPixelColor, System.Numerics.Vector2, out.SlipeLua.Shared.Utilities.Color, System.Boolean }
          },
          properties = {
            { "Format", 0x206, System.Int32, getFormat },
            { "Size", 0x206, System.Numerics.Vector2, getSize }
          },
          class = { 0x6 }
        }
      end
    }
  end)
end)
