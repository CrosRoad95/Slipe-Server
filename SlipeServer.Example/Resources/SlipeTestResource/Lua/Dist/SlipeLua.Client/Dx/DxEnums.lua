-- Generated by CSharp.lua Compiler
local System = System
System.namespace("SlipeLua.Client.Dx", function (namespace)
  --/ <summary>
  --/ Representing the desired texture format
  --/ </summary>
  namespace.enum("TextureFormat", function ()
    return {
      Argb = 0,
      Dxt1 = 1,
      Dxt3 = 2,
      Dxt5 = 3,
      __metadata__ = function (out)
        return {
          fields = {
            { "Argb", 0xE, System.Int32 },
            { "Dxt1", 0xE, System.Int32 },
            { "Dxt3", 0xE, System.Int32 },
            { "Dxt5", 0xE, System.Int32 }
          },
          class = { 0x6 }
        }
      end
    }
  end)

  --/ <summary>
  --/ Representing the desired texture edge handling, which can be one of:
  --/ </summary>
  namespace.enum("TextureEdge", function ()
    return {
      Wrap = 0,
      Clamp = 1,
      Mirror = 2,
      Border = 3,
      MirrorOnce = 4,
      __metadata__ = function (out)
        return {
          fields = {
            { "Border", 0xE, System.Int32 },
            { "Clamp", 0xE, System.Int32 },
            { "Mirror", 0xE, System.Int32 },
            { "MirrorOnce", 0xE, System.Int32 },
            { "Wrap", 0xE, System.Int32 }
          },
          class = { 0x6 }
        }
      end
    }
  end)

  --/ <summary>
  --/ Representing the desired texture type, which can be one of:
  --/ </summary>
  namespace.enum("TextureType", function ()
    return {
      TwoDimensional = 0,
      ThreeDimensional = 1,
      Cube = 2,
      __metadata__ = function (out)
        return {
          fields = {
            { "Cube", 0xE, System.Int32 },
            { "ThreeDimensional", 0xE, System.Int32 },
            { "TwoDimensional", 0xE, System.Int32 }
          },
          class = { 0x6 }
        }
      end
    }
  end)

  --/ <summary>
  --/ Represents valid shader types
  --/ </summary>
  namespace.enum("ShaderElementType", function ()
    return {
      World = 0,
      Ped = 1,
      Vehicle = 2,
      Object = 3,
      Other = 4,
      All = 5,
      __metadata__ = function (out)
        return {
          fields = {
            { "All", 0xE, System.Int32 },
            { "Object", 0xE, System.Int32 },
            { "Other", 0xE, System.Int32 },
            { "Ped", 0xE, System.Int32 },
            { "Vehicle", 0xE, System.Int32 },
            { "World", 0xE, System.Int32 }
          },
          class = { 0x6 }
        }
      end
    }
  end)

  --/ <summary>
  --/ Represents different image formats
  --/ </summary>
  namespace.enum("ImageFormat", function ()
    return {
      plain = 0,
      png = 1,
      jpeg = 2,
      __metadata__ = function (out)
        return {
          fields = {
            { "jpeg", 0xE, System.Int32 },
            { "plain", 0xE, System.Int32 },
            { "png", 0xE, System.Int32 }
          },
          class = { 0x6 }
        }
      end
    }
  end)

  --/ <summary>
  --/ Represents different primitive types
  --/ </summary>
  namespace.enum("PrimitiveType", function ()
    return {
      PointList = 0,
      LineList = 1,
      LineStrip = 2,
      TriangleList = 3,
      TriangleStrip = 4,
      TriangleFan = 5,
      __metadata__ = function (out)
        return {
          fields = {
            { "LineList", 0xE, System.Int32 },
            { "LineStrip", 0xE, System.Int32 },
            { "PointList", 0xE, System.Int32 },
            { "TriangleFan", 0xE, System.Int32 },
            { "TriangleList", 0xE, System.Int32 },
            { "TriangleStrip", 0xE, System.Int32 }
          },
          class = { 0x6 }
        }
      end
    }
  end)
end)
